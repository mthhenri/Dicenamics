// <auto-generated />
using System;
using Dicenamics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dicenamics.Migrations
{
    [DbContext(typeof(AppDatabase))]
    [Migration("20231006224853_DatabaseNewTable")]
    partial class DatabaseNewTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("Dicenamics.Models.DadoComposto", b =>
                {
                    b.Property<int>("DadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condicao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Faces")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DadosCompostos", (string)null);
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoModFixo", b =>
                {
                    b.Property<int>("DadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModificadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DadoCompostoSalaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DadoId", "ModificadorId");

                    b.HasIndex("DadoCompostoSalaId");

                    b.HasIndex("ModificadorId");

                    b.ToTable("DadoCompostoModFixo");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoModVar", b =>
                {
                    b.Property<int>("ConectDadoVarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DadoCompostoSalaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModificadorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConectDadoVarId");

                    b.HasIndex("DadoCompostoSalaId");

                    b.HasIndex("DadoId");

                    b.HasIndex("ModificadorId");

                    b.ToTable("DadoCompostoModVar");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoSala", b =>
                {
                    b.Property<int>("DadoCompostoSalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AcessoPrivado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condicao")
                        .HasColumnType("TEXT");

                    b.Property<int>("CriadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Faces")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SalaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DadoCompostoSalaId");

                    b.HasIndex("CriadorId");

                    b.HasIndex("SalaId");

                    b.ToTable("DadosCompostosSalas");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoSimples", b =>
                {
                    b.Property<int>("DadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Faces")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModificadorVariavelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DadosSimples", (string)null);
                });

            modelBuilder.Entity("Dicenamics.Models.DadoSimplesSala", b =>
                {
                    b.Property<int>("DadoSimplesSalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AcessoPrivado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CriadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Faces")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModificadorVariavelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SalaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DadoSimplesSalaId");

                    b.HasIndex("CriadorId");

                    b.HasIndex("ModificadorVariavelId");

                    b.HasIndex("SalaId");

                    b.ToTable("DadosSimplesSalas");
                });

            modelBuilder.Entity("Dicenamics.Models.ModificadorFixo", b =>
                {
                    b.Property<int>("ModificadorFixoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Valor")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModificadorFixoId");

                    b.ToTable("ModificadoresFixos");
                });

            modelBuilder.Entity("Dicenamics.Models.ModificadorVariavel", b =>
                {
                    b.Property<int>("ModificadorVariavelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DadoSimplesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("ModificadorVariavelId");

                    b.HasIndex("DadoSimplesId")
                        .IsUnique();

                    b.ToTable("ModificadoresVariaveis");
                });

            modelBuilder.Entity("Dicenamics.Models.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdSimples")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioMestreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SalaId");

                    b.HasIndex("UsuarioMestreId");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Dicenamics.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SalaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.HasIndex("SalaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoComposto", b =>
                {
                    b.HasOne("Dicenamics.Models.Usuario", null)
                        .WithMany("DadosCompostosPessoais")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoModFixo", b =>
                {
                    b.HasOne("Dicenamics.Models.DadoCompostoSala", null)
                        .WithMany("Fixos")
                        .HasForeignKey("DadoCompostoSalaId");

                    b.HasOne("Dicenamics.Models.ModificadorFixo", "ModificadorFixo")
                        .WithMany("Fixos")
                        .HasForeignKey("DadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dicenamics.Models.DadoComposto", "DadoComposto")
                        .WithMany("Fixos")
                        .HasForeignKey("ModificadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadoComposto");

                    b.Navigation("ModificadorFixo");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoModVar", b =>
                {
                    b.HasOne("Dicenamics.Models.DadoCompostoSala", null)
                        .WithMany("Variaveis")
                        .HasForeignKey("DadoCompostoSalaId");

                    b.HasOne("Dicenamics.Models.DadoComposto", "DadoComposto")
                        .WithMany("Variaveis")
                        .HasForeignKey("DadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dicenamics.Models.ModificadorVariavel", "ModificadorVariavel")
                        .WithMany("Variaveis")
                        .HasForeignKey("ModificadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadoComposto");

                    b.Navigation("ModificadorVariavel");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoSala", b =>
                {
                    b.HasOne("Dicenamics.Models.Usuario", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dicenamics.Models.Sala", null)
                        .WithMany("DadosCompostosSala")
                        .HasForeignKey("SalaId");

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoSimples", b =>
                {
                    b.HasOne("Dicenamics.Models.Usuario", null)
                        .WithMany("DadosSimplesPessoais")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoSimplesSala", b =>
                {
                    b.HasOne("Dicenamics.Models.Usuario", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dicenamics.Models.ModificadorVariavel", "ModificadorVariavel")
                        .WithMany()
                        .HasForeignKey("ModificadorVariavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dicenamics.Models.Sala", null)
                        .WithMany("DadosSimplesSala")
                        .HasForeignKey("SalaId");

                    b.Navigation("Criador");

                    b.Navigation("ModificadorVariavel");
                });

            modelBuilder.Entity("Dicenamics.Models.ModificadorVariavel", b =>
                {
                    b.HasOne("Dicenamics.Models.DadoSimples", "Dado")
                        .WithOne("ModificadorVariavel")
                        .HasForeignKey("Dicenamics.Models.ModificadorVariavel", "DadoSimplesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dado");
                });

            modelBuilder.Entity("Dicenamics.Models.Sala", b =>
                {
                    b.HasOne("Dicenamics.Models.Usuario", "UsuarioMestre")
                        .WithMany()
                        .HasForeignKey("UsuarioMestreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioMestre");
                });

            modelBuilder.Entity("Dicenamics.Models.Usuario", b =>
                {
                    b.HasOne("Dicenamics.Models.Sala", null)
                        .WithMany("Convidados")
                        .HasForeignKey("SalaId");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoComposto", b =>
                {
                    b.Navigation("Fixos");

                    b.Navigation("Variaveis");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoCompostoSala", b =>
                {
                    b.Navigation("Fixos");

                    b.Navigation("Variaveis");
                });

            modelBuilder.Entity("Dicenamics.Models.DadoSimples", b =>
                {
                    b.Navigation("ModificadorVariavel")
                        .IsRequired();
                });

            modelBuilder.Entity("Dicenamics.Models.ModificadorFixo", b =>
                {
                    b.Navigation("Fixos");
                });

            modelBuilder.Entity("Dicenamics.Models.ModificadorVariavel", b =>
                {
                    b.Navigation("Variaveis");
                });

            modelBuilder.Entity("Dicenamics.Models.Sala", b =>
                {
                    b.Navigation("Convidados");

                    b.Navigation("DadosCompostosSala");

                    b.Navigation("DadosSimplesSala");
                });

            modelBuilder.Entity("Dicenamics.Models.Usuario", b =>
                {
                    b.Navigation("DadosCompostosPessoais");

                    b.Navigation("DadosSimplesPessoais");
                });
#pragma warning restore 612, 618
        }
    }
}
